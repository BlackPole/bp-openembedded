--- a/drivers/mtd/brcmnand/brcmnand_base.c
+++ b/drivers/mtd/brcmnand/brcmnand_base.c
@@ -616,10 +616,37 @@ static const unsigned char ffchars[] = {
 
 //static unsigned char eccmask[128]; // Will be initialized during probe
 
+static uint32_t reg_p23[] = {
+	0x2848, 0x2850, 0x2854,				//2844..284c
+	0x2858, 0x2860, 0x2868, 0x286c,		//2850..285c
+	0x2870, 0x2874, 0x2878, 0x287c,		//2860..286c
+	0x2890, 0x2894, 0x2898, 0x289c,		//2870..287c
+	0x28a0, 0x28a4, 0x28a8, 0x28ac,		//2880..288c
+	0x28b0, 0x28b4, 0x28c0};			//2890..2898
+
+static int p23_init, p23_rev;
+
+static inline uint32_t __attribute__((always_inline)) fixreg_p23(uint32_t reg)
+{
+	if (unlikely(!p23_init)) {
+		int revid = *(volatile unsigned long *)0xb0404000;
+		p23_init = 1;
+		if ((revid >> 16) == 0x7413)
+			p23_rev = 1;
+	}
+
+	if (likely(!p23_rev || reg < 0x2844))
+		return reg;
+
+	return reg_p23[(reg-0x2844)>>2];
+}
 
 static uint32_t brcmnand_ctrl_read(uint32_t nandCtrlReg) 
 {
-	volatile unsigned long* pReg = (volatile unsigned long*) (BRCMNAND_CTRL_REGS 
+	volatile unsigned long* pReg;
+	nandCtrlReg = fixreg_p23(nandCtrlReg);
+
+	pReg = (volatile unsigned long*) (BRCMNAND_CTRL_REGS 
 		+ nandCtrlReg - BCHP_NAND_REVISION);
 
 	if (nandCtrlReg < BCHP_NAND_REVISION || nandCtrlReg > BCHP_NAND_BLK_WR_PROTECT ||
@@ -633,7 +660,10 @@ if (gdebug > 3) printk("%s: CMDREG=%08x val=%08x\n", __FUNCTION__, (unsigned int
 
 static void brcmnand_ctrl_write(uint32_t nandCtrlReg, uint32_t val) 
 {
-	volatile unsigned long* pReg = (volatile unsigned long*) (BRCMNAND_CTRL_REGS 
+	volatile unsigned long* pReg;
+	nandCtrlReg = fixreg_p23(nandCtrlReg);
+
+	pReg = (volatile unsigned long*) (BRCMNAND_CTRL_REGS 
 		+ nandCtrlReg - BCHP_NAND_REVISION);
 
 	if (nandCtrlReg < BCHP_NAND_REVISION || nandCtrlReg > BCHP_NAND_BLK_WR_PROTECT ||
--- a/include/mtd/mtd-abi.h
+++ b/include/mtd/mtd-abi.h
@@ -189,7 +189,7 @@ struct nand_oobfree {
 	uint32_t length;
 };
 
-#define MTD_MAX_OOBFREE_ENTRIES	9
+#define MTD_MAX_OOBFREE_ENTRIES	10
 #define MTD_MAX_ECCPOS_ENTRIES	218	// Was 64 for SLC
 /*
  * ECC layout control structure. Exported to userspace for
