From: Henrique de Moraes Holschuh <hmh@debian.org>
To: Debian Bug Tracking System <submit@bugs.debian.org>
Subject: Bug#223266: pktsetup: please return meaningful exit status on errors
Date: Sun, 7 Dec 2003 17:03:35 -0200

pktsetup seems to always return exit status 0 (ok) even when something
goes wrong.

Stuff like:
  trying to register an already registered device
  trying to de-register an unbound device

should return a non-zero exit status.

--- ./pktsetup/pktsetup.c.orig	2007-11-30 16:39:48.580250640 +0100
+++ ./pktsetup/pktsetup.c	2007-11-30 16:36:48.569992440 +0100
@@ -81,13 +82,13 @@
 	return 0;
 }
 
-static void setup_dev(char *pkt_device, char *device, int rem)
+static int setup_dev(char *pkt_device, char *device, int rem)
 {
 	int pkt_fd, dev_fd, cmd;
 
 	if ((pkt_fd = open(pkt_device, O_RDONLY | O_CREAT)) == -1) {
 		perror("open packet device");
-		return;
+		return 1;
 	}
 
 	if (!rem) {
@@ -95,24 +96,29 @@
 		if ((dev_fd = open(device, O_RDONLY | O_NONBLOCK)) == -1) {
 			perror("open cd-rom");
 			close(pkt_fd);
-			return;
+			return 1;
 		}
 		if (init_cdrom(dev_fd)) {
 			close(pkt_fd);
 			close(dev_fd);
-			return;
+			return 0;
+		} else {
+			return 1;
 		}
 	} else {
 		cmd = PACKET_TEARDOWN_DEV;
 		dev_fd = 0; /* silence gcc */
 	}
 		
-	if (ioctl(pkt_fd, cmd, dev_fd) == -1)
+	if (ioctl(pkt_fd, cmd, dev_fd) == -1) {
 		perror("ioctl");
+		return 1;
+	}
 
 	if (dev_fd)
 		close(dev_fd);
 	close(pkt_fd);
+	return 0;
 }
 
 static int usage(void)
@@ -209,18 +215,19 @@
 	return 0;
 }
 
-static void setup_dev_chardev(char *pkt_device, char *device, int rem)
+static int setup_dev_chardev(char *pkt_device, char *device, int rem)
 {
 	struct pkt_ctrl_command c;
 	struct stat stat_buf;
 	int ctl_fd, dev_fd;
+	int ret = 1;
 
 	memset(&c, 0, sizeof(struct pkt_ctrl_command));
 
 	create_ctl_dev();
 	if ((ctl_fd = open(pkt_dev_name(CTL_DEV), O_RDONLY)) < 0) {
 		perror("ctl open");
-		return;
+		return 1;
 	}
 
 	if (!rem) {
@@ -254,6 +261,7 @@
 			goto out_close;
 		}
 		mknod(pkt_dev_name(pkt_device), S_IFBLK | 0640, c.pkt_dev);
+		ret = 0;
 	} else {
 		int major, minor, remove_node;
 
@@ -275,12 +283,17 @@
 			perror("ioctl");
 			goto out_close;
 		}
-		if (remove_node)
-			unlink(pkt_dev_name(pkt_device));
+		if (remove_node) {
+			if (unlink(pkt_dev_name(pkt_device)) == 0)
+				ret = 0;
+		} else {
+			ret = 0;
+		}
 	}
 
 out_close:
 	close(ctl_fd);
+	return ret;
 }
 
 static void show_mappings(void)
@@ -340,8 +353,7 @@
 	pkt_device = argv[optind];
 	device = argv[optind + 1];
 	if (strchr(pkt_device, '/'))
-		setup_dev(pkt_device, device, rem);
+		return setup_dev(pkt_device, device, rem);
 	else
-		setup_dev_chardev(pkt_device, device, rem);
-	return 0;
+		return setup_dev_chardev(pkt_device, device, rem);
 }
