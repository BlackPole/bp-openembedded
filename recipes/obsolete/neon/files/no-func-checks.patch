--- neon-0.24.7/macros/neon.m4.old	2005-02-24 16:28:01 +00:00
+++ neon-0.24.7/macros/neon.m4	2005-02-24 16:40:17 +00:00
@@ -508,26 +508,9 @@
 # Enable getaddrinfo() support only if all the necessary functions
 # are found.
 ne_enable_gai=yes
-NE_CHECK_FUNCS(getaddrinfo gai_strerror inet_ntop,,[ne_enable_gai=no; break])
-if test $ne_enable_gai = yes; then
-   AC_DEFINE(USE_GETADDRINFO, 1, [Define if getaddrinfo() should be used])
-   AC_CACHE_CHECK([for working AI_ADDRCONFIG], [ne_cv_gai_addrconfig], [
-   AC_RUN_IFELSE([AC_LANG_PROGRAM([#include <netdb.h>],
-[struct addrinfo hints = {0}, *result;
-hints.ai_flags = AI_ADDRCONFIG;
-if (getaddrinfo("localhost", NULL, &hints, &result) != 0) return 1;])],
-   ne_cv_gai_addrconfig=yes, ne_cv_gai_addrconfig=no)])
-   if test $ne_cv_gai_addrconfig = yes; then
-      AC_DEFINE(USE_GAI_ADDRCONFIG, 1, [Define if getaddrinfo supports AI_ADDRCONFIG])
-   fi
-else
-   # Checks for non-getaddrinfo() based resolver interfaces.
-   NE_SEARCH_LIBS(hstrerror, resolv,,[:])
-   NE_CHECK_FUNCS(hstrerror)
-   # Older Unixes don't declare h_errno.
-   AC_CHECK_DECL(h_errno,,,[#define _XOPEN_SOURCE_EXTENDED 1
-#include <netdb.h>])
-fi
+ne_cv_gai_addrconfig=yes
+AC_DEFINE(USE_GETADDRINFO, 1, [Define if getaddrinfo() should be used])
+AC_DEFINE(USE_GAI_ADDRCONFIG, 1, [Define if getaddrinfo supports AI_ADDRCONFIG])
 
 AC_CHECK_MEMBERS(struct tm.tm_gmtoff,,
 AC_MSG_WARN([no timezone handling in date parsing on this platform]),
