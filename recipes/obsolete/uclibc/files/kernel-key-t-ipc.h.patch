# include/linux/posix_types.h defines __kernel_key_t as int, this file
# contains an identical definition.  This results in a compiler error
# if both files are included.  The ipc.h file, however, also includes
# bits/types.h, which typedefs __key_t to (int), therefore it must
# be safe to use __key_t in place of __kernel_key_t (given that C
# regards equivalent numeric typedefs as identical.)
--- uClibc-0.9.27/libc/sysdeps/linux/common/bits/ipc.h.orig	2005-05-07 13:36:04.448332211 -0700
+++ uClibc-0.9.27/libc/sysdeps/linux/common/bits/ipc.h	2005-05-07 13:37:00.493885708 -0700
@@ -35,9 +35,6 @@
 # define IPC_INFO	3		/* See ipcs.  */
 #endif
 
-/* Type of a SYSV IPC key.  */
-typedef int __kernel_key_t;
-
 /* Special key values.  */
 #define IPC_PRIVATE	((__key_t) 0)	/* Private key.  */
 
@@ -45,7 +42,7 @@
 /* Data structure used to pass permission information to IPC operations.  */
 struct ipc_perm
 {
-    __kernel_key_t	__key;
+    __key_t		__key;
     __kernel_uid_t	uid;
     __kernel_gid_t	gid;
     __kernel_uid_t	cuid;
